[{"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\App.js":"1","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\index.js":"2","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\index.js":"3","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\services\\api.js":"4","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\services\\tracks.service.js":"5","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\TrackItem\\index.js":"6","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\AudioControl\\index.js":"7","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\Search\\index.js":"8","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\UploadTrack\\index.js":"9"},{"size":179,"mtime":1607613581635,"results":"10","hashOfConfig":"11"},{"size":241,"mtime":1607554144515,"results":"12","hashOfConfig":"11"},{"size":4750,"mtime":1607617873927,"results":"13","hashOfConfig":"11"},{"size":121,"mtime":1607555359789,"results":"14","hashOfConfig":"11"},{"size":636,"mtime":1607611630281,"results":"15","hashOfConfig":"11"},{"size":1393,"mtime":1607605273437,"results":"16","hashOfConfig":"11"},{"size":572,"mtime":1607616328458,"results":"17","hashOfConfig":"11"},{"size":1477,"mtime":1607616321364,"results":"18","hashOfConfig":"11"},{"size":3688,"mtime":1607624328005,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4izwsg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\App.js",[],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\index.js",[],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\index.js",["40","41"],"import List from '@material-ui/core/List';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getAllTracks } from \"../../services/tracks.service\";\r\nimport Search from '../Search';\r\nimport Container from '@material-ui/core/Container';\r\nimport TrackItem from './TrackItem';\r\nimport UploadTrack from './UploadTrack';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst paginateInit = {\r\n    paginate: {\r\n        limit: 10,\r\n        page: 1,\r\n        pages: 1,\r\n        prev_num: null,\r\n        total: 5\r\n    },\r\n    result: []\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        padding: 30,\r\n        paddingTop: 100,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst TracksList = () => {\r\n    const classes = useStyles();\r\n\r\n    const [paginateResult, setPaginateResult] = useState(paginateInit);\r\n    const [idTrackPlaying, setIdTrackPlaying] = useState(null);\r\n    const [filter, setFilter] = useState('');\r\n    const [openUploadDialog, setOpenUploadDialog] = useState(false);\r\n    const [openSnackSuccesAdded, setOpenSnackSuccesAdded] = useState(false);\r\n\r\n    const getList = async (page = 1, search = '') => {\r\n        try {\r\n            const result = await getAllTracks(page, search);\r\n            const { data } = result;\r\n            console.log(data);\r\n            setPaginateResult(data);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList();\r\n    }, []);\r\n\r\n    const handleChangePage = (event, value) => {\r\n        if (filter) {\r\n            getList(value, filter);\r\n        } else {\r\n            getList(value)\r\n        }\r\n    };\r\n\r\n    const handleChangePlay = (change) => {\r\n        console.log(change);\r\n        if (change && change.isPlay) {\r\n            setIdTrackPlaying(change.trackId);\r\n        }\r\n    }\r\n\r\n    const trackIsPlay = (idTrack) => {\r\n        if (idTrackPlaying) {\r\n            return idTrackPlaying == idTrack;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleChangeText = (value) => {\r\n        getList(1, value);\r\n        setFilter(value);\r\n    }\r\n\r\n    const handleCloseDialog = (isAddedTrack) => {\r\n        if (isAddedTrack) {\r\n            getList();\r\n            setOpenSnackSuccesAdded(true);\r\n        }\r\n\r\n        setOpenUploadDialog(false);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={classes.root}>\r\n            <Container fixed>\r\n\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                        <Search onChangeText={handleChangeText} />\r\n                    </Grid>\r\n                    <Grid item>\r\n\r\n                        <IconButton aria-label=\"enviar\" onClick={() => setOpenUploadDialog(true)}>\r\n                            <BackupIcon />\r\n                        </IconButton>\r\n                        <UploadTrack open={openUploadDialog} onCloseDialog={handleCloseDialog} />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                        <List>\r\n                            {paginateResult?.result?.map(track =>\r\n                                (<TrackItem\r\n                                    key={track.id}\r\n                                    track={track}\r\n                                    isPlay={() => trackIsPlay(track.id)}\r\n                                    onChangePlay={handleChangePlay} />)\r\n                            )}\r\n                        </List>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item>\r\n                        <Pagination count={paginateResult.paginate.pages} page={paginateResult.paginate.page} onChange={handleChangePage} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n            <Snackbar open={openSnackSuccesAdded} autoHideDuration={6000} onClose={()=> setOpenSnackSuccesAdded(false)}>\r\n                <Alert onClose={() => setOpenSnackSuccesAdded(false)} severity=\"success\">\r\n                    Música adicionada com sucesso\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TracksList;","C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\services\\api.js",[],["42","43"],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\services\\tracks.service.js",[],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\TrackItem\\index.js",[],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\AudioControl\\index.js",[],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\Search\\index.js",[],"C:\\Users\\felip\\OneDrive\\Área de Trabalho\\Projetos\\SelecionadoCliqueiMudei\\front\\src\\components\\TracksList\\UploadTrack\\index.js",["44","45","46"],{"ruleId":"47","severity":1,"message":"48","line":10,"column":8,"nodeType":"49","messageId":"50","endLine":10,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":82,"column":35,"nodeType":"53","messageId":"54","endLine":82,"endColumn":37},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"47","severity":1,"message":"59","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":18},{"ruleId":"47","severity":1,"message":"60","line":2,"column":8,"nodeType":"49","messageId":"50","endLine":2,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":3,"column":8,"nodeType":"49","messageId":"50","endLine":3,"endColumn":13},"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'IconButton' is defined but never used.","'InputBase' is defined but never used.","no-global-assign","no-unsafe-negation"]